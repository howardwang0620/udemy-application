{"ast":null,"code":"var _jsxFileName = \"/Users/howardwang/Desktop/udemy-challenge/client/src/App.jsx\";\nimport React from 'react';\nimport Question from './Question.jsx';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numQuestions: 5,\n      questionsAnswered: 0,\n      correctlyAnswered: 0,\n      currentQuestion: 0\n    };\n  }\n\n  onQuestionChange(bool) {\n    console.log(bool);\n    this.setState(state => ({\n      questionsAnswered: state.questionsAnswered + 1,\n      correctlyAnswered: bool ? state.correctlyAnswered + 1 : state.correctlyAnswered,\n      currentQuestion: state.currentQuestion + 1\n    }), () => console.log(this.state)); // console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, this.state.currentQuestion < this.state.numQuestions ? /*#__PURE__*/React.createElement(Question, {\n      key: this.state.currentQuestion,\n      questionID: this.state.currentQuestion,\n      onQuestionChange: bool => this.onQuestionChange(bool),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"You scored: \", this.state.correctlyAnswered, \"/\", this.state.numQuestions)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/howardwang/Desktop/udemy-challenge/client/src/App.jsx"],"names":["React","Question","App","Component","constructor","state","numQuestions","questionsAnswered","correctlyAnswered","currentQuestion","onQuestionChange","bool","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,iBAAiB,EAAE,CAFR;AAGXC,MAAAA,iBAAiB,EAAE,CAHR;AAIXC,MAAAA,eAAe,EAAE;AAJN,KAAb;AAMD;;AAGDC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAKG,QAAL,CAAeT,KAAD,KAAY;AACxBE,MAAAA,iBAAiB,EAAEF,KAAK,CAACE,iBAAN,GAA0B,CADrB;AAExBC,MAAAA,iBAAiB,EAAEG,IAAI,GAAGN,KAAK,CAACG,iBAAN,GAA0B,CAA7B,GAAiCH,KAAK,CAACG,iBAFtC;AAGxBC,MAAAA,eAAe,EAAEJ,KAAK,CAACI,eAAN,GAAwB;AAHjB,KAAZ,CAAd,EAII,MAAMG,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,CAJV,EAFqB,CAOrB;AACD;;AAGDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKV,KAAL,CAAWI,eAAX,GAA6B,KAAKJ,KAAL,CAAWC,YAAxC,gBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWI,eAA1B;AAA2C,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,eAAlE;AACM,MAAA,gBAAgB,EAAGE,IAAD,IAAU,KAAKD,gBAAL,CAAsBC,IAAtB,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKN,KAAL,CAAWG,iBAA5B,OAAgD,KAAKH,KAAL,CAAWC,YAA3D,CADF,CAJN,CADF;AAWD;;AArC+B;;AAwClC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport Question from './Question.jsx'\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      numQuestions: 5,\n      questionsAnswered: 0,\n      correctlyAnswered: 0,\n      currentQuestion: 0,\n    };\n  }\n\n\n  onQuestionChange(bool) {\n    console.log(bool);\n    this.setState((state) => ({\n      questionsAnswered: state.questionsAnswered + 1,\n      correctlyAnswered: bool ? state.correctlyAnswered + 1 : state.correctlyAnswered,\n      currentQuestion: state.currentQuestion + 1\n    }), () => console.log(this.state));\n    // console.log(this.state);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        { this.state.currentQuestion < this.state.numQuestions \n          ? <Question key={this.state.currentQuestion} questionID={this.state.currentQuestion} \n                  onQuestionChange={(bool) => this.onQuestionChange(bool)}/>\n          : <div className=\"results\"> \n              <h1>You scored: {this.state.correctlyAnswered}/{this.state.numQuestions}</h1>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}